"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2],{20011:e=>{e.exports=JSON.parse('{"functions":[{"name":"service","desc":"Constructs/gets a service.\\nIf the service already exists, the existing service will be returned.","params":[{"name":"name","desc":"The name of the service","lua_type":"string"},{"name":"serviceDef","desc":"The definition of the service","lua_type":"fish.ServiceDef<T>?"}],"returns":[{"desc":"The service itself","lua_type":"fish.Service<T>"}],"function_type":"static","source":{"line":50,"path":"src/Server.lua"}},{"name":"serviceDeep","desc":"Constructs all services out of the modules in the descendants in the given instance.","params":[{"name":"folder","desc":"The instance containing the service modules","lua_type":"Instance"}],"returns":[],"function_type":"static","source":{"line":84,"path":"src/Server.lua"}},{"name":"signal","desc":"Returns a marker that will transform into a RemoteSignal once all services are started.","params":[],"returns":[{"desc":"","lua_type":"RemoteSignal"}],"function_type":"static","source":{"line":99,"path":"src/Server.lua"}},{"name":"property","desc":"Returns a marker that will transform into a RemoteProperty once all services are started.","params":[{"name":"initialValue","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"RemoteProperty"}],"function_type":"static","source":{"line":108,"path":"src/Server.lua"}},{"name":"start","desc":"Starts all created services.\\nServices cannot be created after called.","params":[],"returns":[{"desc":"Promise that resolves when started","lua_type":"Promise.TypedPromise<nil>"}],"function_type":"static","source":{"line":118,"path":"src/Server.lua"}},{"name":"onStart","desc":"Returns a promise that is resolved once services are started.","params":[],"returns":[{"desc":"Promise that resolves when started","lua_type":"Promise.TypedPromise<nil>"}],"function_type":"static","source":{"line":195,"path":"src/Server.lua"}}],"properties":[{"name":"N/A","desc":"Markers that identify the type of class they are","lua_type":"nil","ignore":true,"source":{"line":27,"path":"src/Server.lua"}}],"types":[],"name":"Server","desc":"Contains the server functionality of fish framework","source":{"line":6,"path":"src/Server.lua"}}')}}]);